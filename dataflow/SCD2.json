{
	"name": "SCD2",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Product_SCD2_OLTP",
						"type": "DatasetReference"
					},
					"name": "source1"
				},
				{
					"dataset": {
						"referenceName": "Product_SCD2_DWH",
						"type": "DatasetReference"
					},
					"name": "source2"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Product_SCD2_DWH",
						"type": "DatasetReference"
					},
					"name": "sink1"
				},
				{
					"dataset": {
						"referenceName": "Product_SCD2_DWH",
						"type": "DatasetReference"
					},
					"name": "sink3"
				},
				{
					"dataset": {
						"referenceName": "Product_SCD2_DWH",
						"type": "DatasetReference"
					},
					"name": "sink4"
				}
			],
			"transformations": [
				{
					"name": "Hash"
				},
				{
					"name": "Exists"
				},
				{
					"name": "Lookup1"
				},
				{
					"name": "ConditionalSplit1"
				},
				{
					"name": "DerivedColumn1"
				},
				{
					"name": "Exists1"
				},
				{
					"name": "DerivedColumn2"
				},
				{
					"name": "DerivedColumn3"
				},
				{
					"name": "AlterRow1"
				},
				{
					"name": "Select1"
				},
				{
					"name": "AlterRow2"
				},
				{
					"name": "Select2"
				}
			],
			"script": "source(output(\n\t\tSNo as integer,\n\t\tProductID as integer,\n\t\tName as string,\n\t\tProductNumber as string,\n\t\tunitprice as integer,\n\t\tColor as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> source1\nsource(output(\n\t\tPSG_Key as integer,\n\t\tProductID as integer,\n\t\tName as string,\n\t\tProductNumber as string,\n\t\tunitprice as integer,\n\t\tColor as string,\n\t\tcurrent_flag as integer,\n\t\tinserted_date as date,\n\t\tLastupdate_date as date,\n\t\tPHASHkey as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> source2\nsource1 derive(SCDHash = md5(iif(isNull(Name),'',toString(Name))\r\n+ iif(isNull(ProductNumber),'',toString(ProductNumber))\r\n+ iif(isNull(unitprice),'',toString(unitprice))\r\n+ iif(isNull(Color),'',toString(Color))\r\n)) ~> Hash\nHash, source2 exists(SCDHash == PHASHkey,\n\tnegate:true,\n\tbroadcast: 'auto')~> Exists\nExists, source2 lookup(source1@ProductID == source2@ProductID,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> Lookup1\nLookup1 split(isNull(current_flag),\n\tdisjoint: false) ~> ConditionalSplit1@(NewRow, UpdateRow)\nConditionalSplit1@NewRow derive(current_flag = 1,\n\t\tinserted_date = currentTimestamp()) ~> DerivedColumn1\nConditionalSplit1@UpdateRow, source2 exists(ConditionalSplit1@UpdateRow@ProductID== source2@ProductID &&\r\n(\r\nConditionalSplit1@UpdateRow@SCDHash != source2@PHASHkey\r\n),\n\tnegate:false,\n\tbroadcast: 'auto')~> Exists1\nExists1 derive(current_flag = 0,\n\t\tlast_date = currentTimestamp()) ~> DerivedColumn2\nExists1 derive(current_flag = 1) ~> DerivedColumn3\nSelect1 alterRow(updateIf(true())) ~> AlterRow1\nDerivedColumn3 select(mapColumn(\n\t\tProductID = ConditionalSplit1@UpdateRow@ProductID,\n\t\tName = ConditionalSplit1@UpdateRow@Name,\n\t\tProductNumber = ConditionalSplit1@UpdateRow@ProductNumber,\n\t\tunitprice = ConditionalSplit1@UpdateRow@unitprice,\n\t\tColor = ConditionalSplit1@UpdateRow@Color,\n\t\tPHASHKey = SCDHash,\n\t\tcurrent_flag,\n\t\tinserted_date\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect2 alterRow(updateIf(true())) ~> AlterRow2\nDerivedColumn2 select(mapColumn(\n\t\tPHASHkey = SCDHash,\n\t\tProductID = ConditionalSplit1@UpdateRow@ProductID,\n\t\tName = ConditionalSplit1@UpdateRow@Name,\n\t\tProductNumber = ConditionalSplit1@UpdateRow@ProductNumber,\n\t\tunitprice = ConditionalSplit1@UpdateRow@unitprice,\n\t\tColor = ConditionalSplit1@UpdateRow@Color,\n\t\tcurrent_flag,\n\t\tinserted_date,\n\t\tLastupdate_date = last_date\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select2\nDerivedColumn1 sink(input(\n\t\tPSG_Key as integer,\n\t\tProductID as integer,\n\t\tName as string,\n\t\tProductNumber as string,\n\t\tunitprice as integer,\n\t\tColor as string,\n\t\tcurrent_flag as integer,\n\t\tinserted_date as date,\n\t\tLastupdate_date as date,\n\t\tPHASHkey as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tProductID = ConditionalSplit1@NewRow@ProductID,\n\t\tName = ConditionalSplit1@NewRow@Name,\n\t\tProductNumber = ConditionalSplit1@NewRow@ProductNumber,\n\t\tunitprice = ConditionalSplit1@NewRow@unitprice,\n\t\tColor = ConditionalSplit1@NewRow@Color,\n\t\tcurrent_flag,\n\t\tinserted_date,\n\t\tLastupdate_date,\n\t\tPHASHkey = SCDHash\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1\nAlterRow1 sink(input(\n\t\tPSG_Key as integer,\n\t\tProductID as integer,\n\t\tName as string,\n\t\tProductNumber as string,\n\t\tunitprice as integer,\n\t\tColor as string,\n\t\tcurrent_flag as integer,\n\t\tinserted_date as date,\n\t\tLastupdate_date as date,\n\t\tPHASHkey as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tProductID,\n\t\tName,\n\t\tProductNumber,\n\t\tunitprice,\n\t\tColor,\n\t\tcurrent_flag,\n\t\tinserted_date,\n\t\tPHASHkey = PHASHKey\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink3\nAlterRow2 sink(input(\n\t\tPSG_Key as integer,\n\t\tProductID as integer,\n\t\tName as string,\n\t\tProductNumber as string,\n\t\tunitprice as integer,\n\t\tColor as string,\n\t\tcurrent_flag as integer,\n\t\tinserted_date as date,\n\t\tLastupdate_date as date,\n\t\tPHASHkey as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:true,\n\tupsertable:false,\n\tkeys:['ProductID'],\n\tformat: 'table',\n\tmapColumn(\n\t\tcurrent_flag,\n\t\tLastupdate_date\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink4"
		}
	}
}