{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"linkedService": {
						"referenceName": "AzureBlobStorage1",
						"type": "LinkedServiceReference"
					},
					"name": "Excel"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Salesorder",
						"type": "DatasetReference"
					},
					"name": "sink1"
				},
				{
					"dataset": {
						"referenceName": "Salesorder1",
						"type": "DatasetReference"
					},
					"name": "sink2"
				}
			],
			"transformations": [
				{
					"name": "ConditionalSplit1"
				}
			],
			"script": "source(output(\n\t\tOrderDate as date,\n\t\tRegion as string,\n\t\tRep as string,\n\t\tItem as string,\n\t\tUnits as double,\n\t\t{Unit Cost} as double,\n\t\tTotal as double\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'excel',\n\tcontainer: 'input',\n\tfileName: 'SampleData.xlsx',\n\tsheetName: 'SalesOrders',\n\tfirstRowAsHeader: true) ~> Excel\nExcel split(year(OrderDate)>=2020,\n\tdisjoint: false) ~> ConditionalSplit1@(Year2020, Year2019)\nConditionalSplit1@Year2020 sink(input(\n\t\tSno as integer,\n\t\tOrderDate as string,\n\t\tRegion as string,\n\t\tRep as string,\n\t\titem as string,\n\t\tUnits as string,\n\t\tUnit_Cost as string,\n\t\tTotal as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tOrderDate,\n\t\tRegion,\n\t\tRep,\n\t\titem = Item,\n\t\tUnits,\n\t\tUnit_Cost = {Unit Cost},\n\t\tTotal\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1\nConditionalSplit1@Year2019 sink(input(\n\t\tOrderDate as date,\n\t\tRegion as string,\n\t\tRep as string,\n\t\titem as string,\n\t\tUnits as integer,\n\t\t{Unit Cost} as decimal(18,0),\n\t\tTotal as decimal(18,0)\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink2"
		}
	}
}